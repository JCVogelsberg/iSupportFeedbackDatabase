<h1>Muted Feedback Entries</h1>

@using (Html.BeginForm())
{
    <p>
        Search Hash, Version, or Serial Number:
        @Html.TextBox("searchString")
        <input type="button" id="clickbutton" value="<SEARCH>"/>
    </p>
}

<hr>

<div id="clientsDb"> 
    @(Html.Kendo().Grid<iSupportFeedback.Models.MutedFeedbackEntriesViewModel>()
        .Name("grid")
        .Columns(columns =>
        {
            columns.Bound(c => c.Timestamp).Width(85).Format("{0:g}");
            columns.Bound(c => c.Hash).Width(190);     
            columns.Bound(c => c.Version).Width(60);       
            columns.Bound(c => c.SerialNumber).Width(140);
            columns.Bound(c => c.UnMuted).Width(50);
            columns.Bound(c => c.HideFromView).Width(50);
            columns.Bound(c => c.Message).Width(250);                          
        })
                
        .HtmlAttributes(new { style = "height: 750px;" })   
        .Scrollable()
        .Filterable()    
        //.Groupable()
        .Sortable()
        .Pageable(pageable => pageable
            .Refresh(true)
            .PageSizes(true)
            .ButtonCount(10))
        .DataSource(dataSource => dataSource
            .Ajax()
            .PageSize(90)
            .Read(read => read.Action("Entries_Read", "MutedFeedbackEntries")
                              .Data("getSearch"))
        )
    )
</div>

<script>
    function getSearch() {
        return {
            searchString: $("#searchString").val()
        }
    }

    $(document).ready(function(){
        $("#clickbutton").click(function() {
            $('#grid').data('kendoGrid').dataSource.fetch();
        })
    }) 
</script>












